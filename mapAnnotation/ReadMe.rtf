{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red54\green66\blue80;\red255\green255\blue255;\red180\green0\blue98;
\red77\green0\blue158;\red29\green133\blue25;\red68\green137\blue147;\red92\green38\blue153;\red46\green13\blue110;
\red186\green0\blue17;\red0\green11\blue255;}
{\*\expandedcolortbl;\csgray\c100000;\cssrgb\c27059\c32941\c38824;\cssrgb\c100000\c100000\c100000;\csgenericrgb\c70588\c0\c38431;
\csgenericrgb\c30196\c0\c61961;\csgenericrgb\c11373\c52157\c9804;\csgenericrgb\c26667\c53725\c57647;\csgenericrgb\c36078\c14902\c60000;\csgenericrgb\c18039\c5098\c43137;
\csgenericrgb\c72941\c0\c6667;\csgenericrgb\c0\c4314\c100000;}
\margl720\margr720\margb720\margt720\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 location1Swift\
mapAnnotaton\
uses swift to generate a map with location with debug notes\
\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf0 So the first thing you need to do is to add one or both of the following keys to your Info.plist file: NSLocationWhenInUseUsageDescription \
NSLocationAlwaysUsageDescription\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 plist must have:\
\
\pard\pardeftab720\sl340\partightenfactor0

\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
NSCameraUsageDescription
\f1\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl280\partightenfactor0
\cf0 \
\pard\tx866\pardeftab866\pardirnatural\partightenfactor0

\f2 \cf4 \CocoaLigature0 import\cf0  UIKit\
\cf4 import\cf0  MapKit\
\cf4 import\cf0  CoreLocation\
\
, \cf5 MKMapViewDelegate\cf0 ,\
    \cf5 CLLocationManagerDelegate\
\
\pard\tx866\pardeftab866\pardirnatural\partightenfactor0
\cf0     \cf4 @IBOutlet\cf0  \cf4 var\cf0  mapView: \cf5 MKMapView\cf0 !\
    \cf6 //outlet at the beginning\cf5 \
\
\
\cf0    \cf4 let\cf0  locationManager = \cf5 CLLocationManager\cf0 ()\
    \cf6 //initialize location manager\cf5 \
\
\
view did load\
\
\pard\tx866\pardeftab866\pardirnatural\partightenfactor0
\cf4 self\cf0 .\cf7 locationManager\cf0 .\cf8 delegate\cf0  = \cf4 self\cf0 \
        \cf4 self\cf0 .\cf7 locationManager\cf0 .\cf8 desiredAccuracy\cf0  = \cf8 kCLLocationAccuracyBest\cf0 \
        \cf4 self\cf0 .\cf7 locationManager\cf0 .\cf9 requestWhenInUseAuthorization\cf0 ()\
        \
        \cf9 print\cf0 (\cf10 "request authorization"\cf0 )\
        \
        \cf4 self\cf0 .\cf7 locationManager\cf0 .\cf9 startUpdatingLocation\cf0 ()\
        \
        \cf9 print\cf0 (\cf10 "start updating location"\cf0 )\
        \
        \cf4 self\cf0 .\cf7 mapView\cf0 .\cf8 showsUserLocation\cf0  = \cf4 true\
\
\
func\cf0  locationManager(manager: \cf5 CLLocationManager\cf0 , didUpdateLocations\
        locations: [\cf5 CLLocation\cf0 ])\
    \{\
        \cf4 let\cf0  location = locations.\cf8 last\cf0 \
        \
        \cf9 print\cf0 (\cf10 "update last location"\cf0 )\
        \
        \cf4 let\cf0  center = \cf8 CLLocationCoordinate2D\cf0 (latitude: location!.\cf8 coordinate\cf0 .\cf8 latitude\cf0 , longitude: location!.\cf8 coordinate\cf0 .\cf8 longitude\cf0 )\
        \cf4 let\cf0  region = \cf8 MKCoordinateRegion\cf0 (center: center, span: \cf8 MKCoordinateSpan\cf0 (latitudeDelta: \cf11 0.01\cf0 , longitudeDelta: \cf11 0.01\cf0 ))\
        \
        \cf4 self\cf0 .\cf7 mapView\cf0 .\cf9 setRegion\cf0 (region, animated: \cf4 true\cf0 )\
        \
        \cf4 self\cf0 .\cf7 locationManager\cf0 .\cf9 stopUpdatingLocation\cf0 ()\
    \}\
    \
    \cf4 func\cf0  locationManager(manager: \cf5 CLLocationManager\cf0 , didFailWithError error:\cf5 NSError\cf0 )\
    \{\
        \cf9 print\cf0 (\cf10 "Error: "\cf0  + error.\cf8 localizedDescription\cf0 )\
    \}\
\
\cf4 \
\
\
\
\
\pard\tx866\pardeftab866\pardirnatural\partightenfactor0
\cf0 \
}